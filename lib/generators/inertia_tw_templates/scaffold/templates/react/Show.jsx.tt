import { Head, Link, usePage } from '@inertiajs/react'
import { useAuthorization } from '../../hooks/useAuthorization'
import AccessDenied from '../../components/AccessDenied'
import { formatDate, formatDateOnly, formatTime, formatNumber } from '../../utils/formatters'

<% references = attributes.select { |attr| attr.type == :references && attr.name != 'user' } -%>
<% has_user_reference = attributes.any? { |attr| attr.type == :references && attr.name == 'user' } -%>
<% has_other_references = references.any? -%>
export default function Show() {
<% if has_user_reference && has_other_references -%>
  const { <%= singular_table_name %>, <%= references.map { |attribute| "#{attribute.name.singularize}" }.join(",\n") %> } = usePage().props
<% elsif has_user_reference && !has_other_references -%>
  const { <%= singular_table_name %>, user } = usePage().props
<% elsif !has_user_reference && has_other_references -%>
  const { <%= singular_table_name %>, <%= references.map { |attribute| "#{attribute.name.singularize}" }.join(",\n") %> } = usePage().props
<% else -%>
  const { <%= singular_table_name %> } = usePage().props
<% end -%>
  const { canSee, canEdit } = useAuthorization()

  // Check if user can see this <%= singular_table_name %>
  if (!canSee(<%= singular_table_name %>)) {
    return <AccessDenied message={`You don't have permission to view this <%= singular_table_name %>.`} />
  }

  return (
    <>
      <Head title="<%= singular_table_name.titleize %> Details" />

      <section className="w-full md:mt-10">
        <div className="bg-neutral-50 dark:bg-neutral-950 border border-neutral-300 dark:border-neutral-700 rounded-xl py-8 px-8 mx-auto max-w-4xl">
          <h2 className="mb-4 text-xl font-bold text-neutral-900 dark:text-neutral-50"><%= singular_table_name.titleize %> Details</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-x-0 gap-y-4">
<% attributes.reject { |attr| attr.type == :text }.each do |attribute| -%>
            <div>
              <hr className="border-neutral-300 dark:border-neutral-700" />
              <label className="block mb-2 text-sm font-medium text-neutral-900 dark:text-neutral-50">
                <%= attribute.human_name %>
              </label>
              <p className="text-neutral-900 dark:text-neutral-50">
<% if attribute.type == :boolean -%>
                {<%= singular_table_name %>.<%= attribute.name %> ? 'Yes' : 'No'}
<% elsif attribute.type == :datetime -%>
                {formatDate(<%= singular_table_name %>.<%= attribute.name %>)}
<% elsif attribute.type == :date -%>
                {formatDateOnly(<%= singular_table_name %>.<%= attribute.name %>)}
<% elsif attribute.type == :time -%>
                {formatTime(<%= singular_table_name %>.<%= attribute.name %>)}
<% elsif attribute.type == :references -%>
                {<%= attribute.name %>.name || <%= attribute.name %>.id}
<% else -%>
                {formatNumber(<%= singular_table_name %>.<%= attribute.name %>, '<%= attribute.type %>')}
<% end -%>
              </p>
            </div>
<% end -%>
          </div>

<% if attributes.any? { |attr| attr.type == :text } -%>
          <div className="mt-6">
<% attributes.select { |attr| attr.type == :text }.each do |attribute| -%>
            <div className="mb-4">
              <hr className="border-neutral-300 dark:border-neutral-700" />
              <label className="block mb-2 text-sm font-medium text-neutral-900 dark:text-neutral-50">
                <%= attribute.human_name %>
              </label>
              <p className="text-neutral-900 dark:text-neutral-50 whitespace-pre-wrap">
                {<%= singular_table_name %>.<%= attribute.name %>}
              </p>
            </div>
<% end -%>
          </div>
<% end -%>

          <div className="flex items-center">
            {canEdit(<%= singular_table_name %>) && (
              <Link
                href={`/<%= plural_table_name %>/${<%= singular_table_name %>.id}/edit`}
                type="button"
                className="inline-flex items-center px-8 py-2.5 mt-8 text-sm font-medium text-center text-neutral-50 bg-utility-700 rounded-lg focus:ring-neutral-200 dark:focus:ring-utility-500 hover:bg-utility-600 disabled:opacity-50 disabled:cursor-not-allowed"
              >
                <svg aria-hidden="true" className="mr-1 -ml-1 w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z"></path><path fillRule="evenodd" d="M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z" clipRule="evenodd"></path></svg>
                Edit
              </Link>
            )}
            <Link
              href="/<%= plural_table_name %>"
              type="button"
              className="inline-flex items-center px-8 py-2.5 mt-8 text-sm font-medium text-center hover:underline text-utility-700 hover:color-utility-600 dark:text-neutral-200"
            >
              Back
            </Link>
          </div>
        </div>
      </section>
    </>
  )
}